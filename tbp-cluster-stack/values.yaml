# values.yaml

# ---------------------------
# TBP Applications
# ---------------------------
backend:
  image:
    repository: ghcr.io/lobothedark/tbp-backend
    tag: latest
  replicas: 1

frontend:
  image:
    repository: ghcr.io/lobothedark/tbp-frontend
    tag: latest
  replicas: 1

auth:
  image:
    repository: ghcr.io/lobothedark/tbp-auth
    tag: latest
  replicas: 1
  env:
    SPRING_PROFILES_ACTIVE: prod
    DB_HOST: postgres
    DB_PORT: "5432"
    DB_NAME: tbp_user
    DB_USER: postgres
    DB_PASSWORD: "i*DV5-E.UM6YB_~}-TcP39TRbseZ3R~R"

postgres:
  image:
    repository: postgres
    tag: 17.4
  pvc:
    storage: 5Gi

# ---------------------------
# Monitoring Dependencies
# ---------------------------
kube-prometheus-stack:
  grafana:
    adminPassword: "changeme"
    service:
      type: ClusterIP      
    ingress:
      enabled: true # Stelle sicher, dass Ingress aktiviert ist
      hostname: grafana.k3d.local # <-- Dein gew端nschter DNS-Name
  prometheus:
    service:
      type: ClusterIP
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
    ingress:
      enabled: true # Stelle sicher, dass Ingress aktiviert ist
      hostname: prometheus.k3d.local # <-- Dein gew端nschter DNS-Name  
loki-stack:
  promtail:
    enabled: true
  service:
    type: ClusterIP
  ingress:
    enabled: true # Stelle sicher, dass Ingress aktiviert ist
    hostname: loki.k3d.local # <-- Dein gew端nschter DNS-Name  

tempo:
  metricsGenerator:
    enabled: true
  service:
    type: ClusterIP    
  ingress:
    enabled: true # Stelle sicher, dass Ingress aktiviert ist
    hostname: tempo.k3d.local # <-- Dein gew端nschter DNS-Name     
    
# ---------------------------
# Ingress controller
# ---------------------------
ingress-nginx:
  controller:
    hostNetwork: true
    service:
      type: ClusterIP